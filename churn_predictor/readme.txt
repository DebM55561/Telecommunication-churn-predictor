¦ Telco Customer Churn PredictionThis project implements a machine learning pipeline to predict customer churn in a telecomcompany. It uses Random Forest, XGBoost, and Logistic Regression to evaluate performance, withfeature engineering and preprocessing pipelines. Additionally, a Streamlit web app (`app.py`) allowsinteractive churn prediction.¦ Project Structure• `teleco.csv` – Input dataset• `model.pkl` – Trained model file• `main.py` – Training, feature engineering, evaluation code• `app.py` – Streamlit app for interactive churn prediction• `README.pdf` – Project documentation¦ Features• Preprocessing: imputation, scaling, one-hot encoding• Feature engineering: tenure bins, average monthly cost, service count, bundles, contractencoding• Model training: Random Forest, XGBoost, Logistic Regression• Evaluation: accuracy, balanced accuracy, confusion matrix, precision-recall tuning• Model saving with joblib• Interactive Streamlit app for predictions¦ ResultsModel Comparison:- XGBoost: Accuracy 0.805, Balanced Accuracy 0.713- Random Forest: Accuracy 0.790, Balanced Accuracy 0.690- Logistic Regression: Accuracy 0.750, Balanced Accuracy 0.660¦ How to Run1 Install dependencies: `pip install pandas numpy scikit-learn joblib xgboost matplotlib streamlit`2 Place `teleco.csv` in the working directory3 Train models by running `main.py`4 Launch Streamlit app: `streamlit run app.py`5 Enter customer details in the app UI and predict churn